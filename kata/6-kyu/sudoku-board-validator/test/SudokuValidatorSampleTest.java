import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.stream.Stream;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;

class SudokuValidatorSampleTest {
  private static Stream<int[][]> validData() {
    return Stream.of(
        new int[][]{
            {5, 3, 4, 6, 7, 8, 9, 1, 2},
            {6, 7, 2, 1, 9, 5, 3, 4, 8},
            {1, 9, 8, 3, 4, 2, 5, 6, 7},
            {8, 5, 9, 7, 6, 1, 4, 2, 3},
            {4, 2, 6, 8, 5, 3, 7, 9, 1},
            {7, 1, 3, 9, 2, 4, 8, 5, 6},
            {9, 6, 1, 5, 3, 7, 2, 8, 4},
            {2, 8, 7, 4, 1, 9, 6, 3, 5},
            {3, 4, 5, 2, 8, 6, 1, 7, 9}},
        new int[][]{
            {1, 3, 2, 5, 7, 9, 4, 6, 8},
            {4, 9, 8, 2, 6, 1, 3, 7, 5},
            {7, 5, 6, 3, 8, 4, 2, 1, 9},
            {6, 4, 3, 1, 5, 8, 7, 9, 2},
            {5, 2, 1, 7, 9, 3, 8, 4, 6},
            {9, 8, 7, 4, 2, 6, 5, 3, 1},
            {2, 1, 4, 9, 3, 5, 6, 8, 7},
            {3, 6, 5, 8, 1, 7, 9, 2, 4},
            {8, 7, 9, 6, 4, 2, 1, 5, 3}},
        new int[][]{
            {7, 8, 4, 1, 5, 9, 3, 2, 6},
            {5, 3, 9, 6, 7, 2, 8, 4, 1},
            {6, 1, 2, 4, 3, 8, 7, 5, 9},
            {9, 2, 8, 7, 1, 5, 4, 6, 3},
            {3, 5, 7, 8, 4, 6, 1, 9, 2},
            {4, 6, 1, 9, 2, 3, 5, 8, 7},
            {8, 7, 6, 3, 9, 4, 2, 1, 5},
            {2, 4, 3, 5, 6, 1, 9, 7, 8},
            {1, 9, 5, 2, 8, 7, 6, 3, 4}},
        new int[][]{
            {9, 2, 6, 5, 8, 3, 4, 7, 1},
            {7, 1, 3, 4, 2, 6, 9, 8, 5},
            {8, 4, 5, 9, 7, 1, 3, 6, 2},
            {3, 6, 2, 8, 5, 7, 1, 4, 9},
            {4, 7, 1, 2, 6, 9, 5, 3, 8},
            {5, 9, 8, 3, 1, 4, 7, 2, 6},
            {6, 5, 7, 1, 3, 8, 2, 9, 4},
            {2, 8, 4, 7, 9, 5, 6, 1, 3},
            {1, 3, 9, 6, 4, 2, 8, 5, 7}},
        new int[][]{
            {7, 1, 5, 6, 2, 3, 8, 4, 9},
            {6, 2, 4, 8, 1, 9, 3, 7, 5},
            {3, 9, 8, 7, 4, 5, 6, 2, 1},
            {5, 3, 9, 2, 7, 6, 4, 1, 8},
            {4, 6, 2, 1, 9, 8, 5, 3, 7},
            {8, 7, 1, 5, 3, 4, 9, 6, 2},
            {2, 5, 3, 9, 6, 7, 1, 8, 4},
            {1, 8, 6, 4, 5, 2, 7, 9, 3},
            {9, 4, 7, 3, 8, 1, 2, 5, 6}},
        new int[][]{
            {7, 8, 3, 4, 5, 6, 1, 2, 9},
            {6, 9, 2, 1, 8, 7, 3, 4, 5},
            {1, 4, 5, 2, 3, 9, 6, 7, 8},
            {8, 1, 7, 3, 6, 2, 9, 5, 4},
            {5, 6, 4, 7, 9, 8, 2, 1, 3},
            {3, 2, 9, 5, 4, 1, 8, 6, 7},
            {4, 7, 6, 8, 2, 3, 5, 9, 1},
            {9, 3, 1, 6, 7, 5, 4, 8, 2},
            {2, 5, 8, 9, 1, 4, 7, 3, 6}},
        new int[][]{
            {1, 7, 3, 2, 6, 8, 9, 5, 4},
            {4, 2, 5, 1, 9, 3, 7, 6, 8},
            {8, 6, 9, 7, 4, 5, 1, 2, 3},
            {6, 1, 2, 8, 3, 7, 4, 9, 5},
            {3, 9, 8, 4, 5, 6, 2, 1, 7},
            {5, 4, 7, 9, 1, 2, 3, 8, 6},
            {9, 5, 4, 3, 8, 1, 6, 7, 2},
            {2, 3, 6, 5, 7, 9, 8, 4, 1},
            {7, 8, 1, 6, 2, 4, 5, 3, 9}},
        new int[][]{
            {8, 4, 7, 2, 6, 5, 1, 9, 3},
            {1, 3, 6, 7, 9, 8, 2, 4, 5},
            {9, 5, 2, 1, 4, 3, 8, 6, 7},
            {4, 2, 9, 6, 7, 1, 5, 3, 8},
            {6, 7, 8, 5, 3, 2, 9, 1, 4},
            {3, 1, 5, 4, 8, 9, 7, 2, 6},
            {5, 6, 4, 9, 1, 7, 3, 8, 2},
            {7, 8, 1, 3, 2, 4, 6, 5, 9},
            {2, 9, 3, 8, 5, 6, 4, 7, 1}}
    );
  }

  private static Stream<int[][]> invalidData() {
    return Stream.of(
        new int[][]{
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {5, 5, 5, 5, 5, 5, 5, 5, 5}},
        new int[][]{
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {1, 2, 3, 4, 5, 6, 7, 8, 9}},
        new int[][]{
            {1, 1, 1, 1, 1, 1, 1, 1, 1},
            {2, 2, 2, 2, 2, 2, 2, 2, 2},
            {3, 3, 3, 3, 3, 3, 3, 3, 3},
            {4, 4, 4, 4, 4, 4, 4, 4, 4},
            {5, 5, 5, 5, 5, 5, 5, 5, 5},
            {6, 6, 6, 6, 6, 6, 6, 6, 6},
            {7, 7, 7, 7, 7, 7, 7, 7, 7},
            {8, 8, 8, 8, 8, 8, 8, 8, 8},
            {9, 9, 9, 9, 9, 9, 9, 9, 9}},
        new int[][]{
            {8, 4, 7, 2, 6, 5, 1, 0, 3},
            {1, 3, 6, 7, 0, 8, 2, 4, 5},
            {0, 5, 2, 1, 4, 3, 8, 6, 7},
            {4, 2, 0, 6, 7, 1, 5, 3, 8},
            {6, 7, 8, 5, 3, 2, 0, 1, 4},
            {3, 1, 5, 4, 8, 0, 7, 2, 6},
            {5, 6, 4, 0, 1, 7, 3, 8, 2},
            {7, 8, 1, 3, 2, 4, 6, 5, 0},
            {2, 0, 3, 8, 5, 6, 4, 7, 1}},
        new int[][]{
            {1, 3, 2, 5, 7, 9, 4, 6, 8},
            {4, 9, 8, 2, 6, 1, 3, 7, 5},
            {7, 5, 6, 3, 8, 4, 2, 1, 9},
            {6, 4, 3, 1, 5, 8, 7, 9, 2},
            {5, 2, 1, 7, 9, 3, 8, 4, 6},
            {9, 8, 7, 4, 2, 6, 5, 3, 1},
            {2, 1, 4, 9, 3, 5, 6, 8, 7},
            {3, 6, 5, 8, 1, 7, 9, 2, 4},
            {8, 7, 9, 6, 4, 2, 1, 3, 5}},
        new int[][]{
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {2, 3, 4, 5, 6, 7, 8, 9, 1},
            {3, 4, 5, 6, 7, 8, 9, 1, 2},
            {4, 5, 6, 7, 8, 9, 1, 2, 3},
            {5, 6, 7, 8, 9, 1, 2, 3, 4},
            {6, 7, 8, 9, 1, 2, 3, 4, 5},
            {7, 8, 9, 1, 2, 3, 4, 5, 6},
            {8, 9, 1, 2, 3, 4, 5, 6, 7},
            {9, 1, 2, 3, 4, 5, 6, 7, 8}},
        new int[][]{
            {0, 3, 4, 6, 7, 8, 9, 1, 2},
            {6, 7, 2, 1, 9, 5, 3, 4, 8},
            {1, 9, 8, 3, 4, 2, 5, 6, 7},
            {8, 5, 9, 7, 6, 1, 4, 2, 3},
            {4, 2, 6, 8, 5, 3, 7, 9, 1},
            {7, 1, 3, 9, 2, 4, 8, 5, 6},
            {9, 6, 1, 5, 3, 7, 2, 8, 4},
            {2, 8, 7, 4, 1, 9, 6, 3, 5},
            {3, 4, 5, 2, 8, 6, 1, 7, 9}},
        new int[][]{
            {1, 2, 3, 4, 5, 6, 6, 9, 9},
            {4, 5, 6, 6, 9, 9, 1, 2, 3},
            {6, 9, 9, 1, 2, 3, 4, 5, 6},
            {2, 3, 4, 5, 6, 6, 9, 9, 1},
            {5, 6, 6, 9, 9, 1, 2, 3, 4},
            {9, 9, 1, 2, 3, 4, 5, 6, 6},
            {3, 4, 5, 6, 6, 9, 9, 1, 2},
            {6, 6, 9, 9, 1, 2, 3, 4, 5},
            {9, 1, 2, 3, 4, 5, 6, 6, 9}},
        new int[][]{
            {1, 2, 3, 1, 2, 3, 1, 2, 3},
            {4, 5, 6, 4, 5, 6, 4, 5, 6},
            {7, 8, 9, 7, 8, 9, 7, 8, 9},
            {2, 3, 1, 2, 3, 1, 2, 3, 1},
            {5, 6, 4, 5, 6, 4, 5, 6, 4},
            {8, 9, 7, 8, 9, 7, 8, 9, 7},
            {3, 1, 2, 3, 1, 2, 3, 1, 2},
            {6, 4, 5, 6, 4, 5, 6, 4, 5},
            {9, 7, 8, 9, 7, 8, 9, 7, 8}},
        new int[][]{
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {4, 5, 6, 7, 8, 9, 1, 2, 3},
            {7, 8, 9, 1, 2, 3, 4, 5, 6},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {4, 5, 6, 7, 8, 9, 1, 2, 3},
            {7, 8, 9, 1, 2, 3, 4, 5, 6},
            {1, 2, 3, 4, 5, 6, 7, 8, 9},
            {4, 5, 6, 7, 8, 9, 1, 2, 3},
            {7, 8, 9, 1, 2, 3, 4, 5, 6}}
    );
  }

  @ParameterizedTest
  @MethodSource("validData")
  void valid(int[][] board) {
    assertTrue(SudokuValidator.validate(board));
  }

  @ParameterizedTest
  @MethodSource("invalidData")
  void invalid(int[][] board) {
    assertFalse(SudokuValidator.validate(board));
  }
}