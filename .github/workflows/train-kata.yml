name: Train Kata
run-name: Kata ${{ inputs.kata }}

on:
  workflow_dispatch:
    inputs:
      kata:
        description: Kata ID or slug.
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  train-kata:
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    steps:
      - name: Fetch metadata
        env:
          KATA: ${{ inputs.kata }}
        id: kata
        run: |
          JSON=$(curl -s "https://www.codewars.com/api/v1/code-challenges/$KATA")
          echo "json=$JSON" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create README
        env:
          JSON: ${{ steps.kata.outputs.json }}
        run: |
          RANK=$(echo $JSON | jq -r '.rank.name // "beta"' | sed 's/ /-/g')
          SLUG=$(echo $JSON | jq -r '.slug')
          NAME=$(echo $JSON | jq -r '.name')
          URL=$(echo $JSON | jq -r '.url')
          DESC=$(echo $JSON | jq -r '.description' | sed 's/\\n/\n/g')
          BASEDIR="./kata/$RANK/$SLUG"
          mkdir -p "$BASEDIR"
          {
            echo "# [$NAME](https://www.codewars.com/kata/$SLUG \"$URL\")"
            echo
            echo "$DESC"
          } > "$BASEDIR/README.md"

      - name: Commit changes
        id: git
        env:
          JSON: ${{ steps.kata.outputs.json }}
        run: |
          ID=$(echo $JSON | jq -r '.id')
          BRANCH="kata/$ID"
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          git checkout -b $BRANCH
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git add -A
          git commit -m "docs: kata description"
          git push --force origin $BRANCH

      - name: Create pull request
        env:
          JSON: ${{ steps.kata.outputs.json }}
          BRANCH: ${{ steps.git.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LABEL=$(echo $JSON | jq -r '.rank.name')
          SLUG=$(echo $JSON | jq -r '.slug')
          gh pr create \
            --title "feat: kata/$SLUG" \
            --body "" \
            --draft \
            --label "feature" \
            --label "$LABEL" \
            --head "$BRANCH"