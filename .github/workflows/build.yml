name: Build CI

on:
  push:
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]
    paths:
      - .github/workflows/build.yml
      - gradle/**
      - build.gradle.kts
      - settings.gradle.kts
      - gradle.properties
  workflow_dispatch:
    inputs:
      job_count:
        description: Max concurrent jobs to execute

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  fork:
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    outputs:
      job_count: ${{ steps.job.outputs.count }}
      job_sid: ${{ steps.job.outputs.sid }}
    steps:
      - name: Assign job IDs
        id: job
        run: |
          # set default as inputs resolve only at manual executions
          JOB_COUNT=${{ github.event.inputs.job_count || 40 }}
          echo "count=$JOB_COUNT" >> $GITHUB_OUTPUT
          echo "sid=[`seq -s , 1 $JOB_COUNT`]" >> $GITHUB_OUTPUT

  # ------------------------
  test:
    needs: fork
    runs-on: ubuntu-24.04
    timeout-minutes: 8
    strategy:
      matrix:
        job_sid: ${{ fromJSON(needs.fork.outputs.job_sid) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4

      - name: Test project
        run: |
          ./gradlew test jacocoTestReport -x processResources -x processTestResources \
            --parallel \
            --configuration-cache \
            --build-cache \
            --no-daemon \
            --scan \
            --no-problems-report \
            -DforkCount=${{ needs.fork.outputs.job_count }} \
            -DforkSid=${{ matrix.job_sid }}

      - name: Pack fork artifacts
        run: |
          find . -path "*/main/*.class" -o -path "*/test/*.class" -o -path "*/jacocoTestReport.xml" > artifacts
          tar czfT artifacts.tar.gz artifacts

      - name: Upload fork artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: fork-${{ matrix.job_sid }}
          retention-days: 1
          path: artifacts.tar.gz

  # ------------------------
  scan:
    needs: test
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write
    env:
      VERSION: 1.26.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Download fork artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0

      - name: Unpack fork artifacts
        run: for f in fork-*/artifacts.tar.gz; do tar xf $f && rm $f; done

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4
        with:
          add-job-summary-as-pr-comment: always

      - name: Analyze code quality
        run: |
          ./gradlew sonar -x compileJava -x compileTestJava \
            --parallel \
            --configuration-cache \
            --build-cache \
            --no-daemon \
            --scan \
            --no-problems-report \
            -Pversion=${{ format('{0}+{1}', env.VERSION, github.RUN_NUMBER) }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_KEY }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.gradle.skipCompile=true